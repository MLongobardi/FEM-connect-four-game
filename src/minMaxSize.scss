/**
 * minMaxSize scales a value linearly from $min-size to $max-size depending on the screen width, using vw units.
 * For example, if the screen size is at 33% of the way from $min-screen to $max-screen,
 * the returned value will similarly be at 33% of the way from $min-size to $max-size.
 * minMedMaxSize scales from min to med and then from med to max.
 * Original idea from: 
 * https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
 */

@use "sass:math";

@function minMaxSize($min-size, $max-size, $min-screen: 375px, $max-screen: 768px) {
    //$min-size and $max-size should be px, can be a negative value;
    @if $min-size >= $max-size or $min-screen >= $max-screen {
        @error "Arguments should go from small to big";
    }
	
	$slope: math.div($max-size - $min-size, $max-screen - $min-screen);
    $yIntersection: $min-size - $min-screen * $slope;
	
	@return clamp(#{$min-size}, #{$yIntersection} + #{$slope * 100vw}, #{$max-size});
}

@function minMaxSize($size-at-min, $size-at-max, $min-screen: 375px, $max-screen: 768px) {
    //$size-at-min and $size-at-max should be px, can be negative values and can go from big to small;
    @if $size-at-min == $size-at-max {
        @return $size-at-min;
    }
    @if $min-screen >= $max-screen {
        @error "$max-screen should be higher than $min-screen";
    }
	
	$slope: math.div($size-at-max - $size-at-min, $max-screen - $min-screen);
    $y-intersection: $size-at-min - $min-screen * $slope;
    
    $smallest-size: math.min($size-at-min, $size-at-max);
    $biggest-size: math.max($size-at-min, $size-at-max);

	@return #{clamp(#{$smallest-size}, #{$y-intersection} + #{$slope * 100vw}, #{$biggest-size})};
}

@function minMedMaxSize($min-size, $med-size, $max-size, $min-screen: 375px, $med-screen: 768px, $max-screen: 1440px) {
    @if $min-size >= $med-size or $med-size >= $max-size or $min-screen >= $med-screen or $med-screen >= $max-screen {
        @error "Arguments should go from small to big";
    }
    
    $slope1: math.div($med-size - $min-size, $med-screen - $min-screen);
    $y-intersection1: $min-size - $min-screen * $slope1;
    $min-to-med: "#{$y-intersection1} + #{$slope1 * 100vw}";
    
    $slope2: math.div($max-size - $med-size, $max-screen - $med-screen);
    $y-intersection2: $med-size - $med-screen * $slope2;
    $med-to-max: "#{$y-intersection2} + #{$slope2 * 100vw}";
    
    @return clamp(clamp(#{$min-size},#{$min-to-med},#{$med-size}), #{$med-to-max}, #{$max-size});
}